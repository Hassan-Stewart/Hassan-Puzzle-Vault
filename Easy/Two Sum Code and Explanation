# This is a code implementation of a two-sum problem.
# As mentioned in the explanation this is a quest to find the secret of the universe
# Behind a door lies the secret, but you must first unlock it
from typing import List

class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        # Create a hashmap to store numbers and their indices
        numondoor = {}
        
        # Iterate through the list
        for i, num in enumerate(nums):
            # Calculate the complement
            bignum = target - num
            
            # Check if the bignum exists
            # If it doesn't exist return Accsess Granted
            if bignum in numondoor:
                return [numondoor[bignum], i]
            
            # Add the number and its index to the hashmap
            numondoor[num] = i
        
        # Return Access Denied if nothing is found
        return []